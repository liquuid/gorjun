// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/subutai-io/gorjun/rest/models"
)

// AptListOKCode is the HTTP code returned for type AptListOK
const AptListOKCode int = 200

/*AptListOK turns JSON formatted list of elements

swagger:response aptListOK
*/
type AptListOK struct {

	/*
	  In: Body
	*/
	Payload models.AptListOKBody `json:"body,omitempty"`
}

// NewAptListOK creates AptListOK with default headers values
func NewAptListOK() *AptListOK {
	return &AptListOK{}
}

// WithPayload adds the payload to the apt list o k response
func (o *AptListOK) WithPayload(payload models.AptListOKBody) *AptListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the apt list o k response
func (o *AptListOK) SetPayload(payload models.AptListOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AptListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.AptListOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*AptListDefault generic error response

swagger:response aptListDefault
*/
type AptListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload AptListDefaultBody `json:"body,omitempty"`
}

// NewAptListDefault creates AptListDefault with default headers values
func NewAptListDefault(code int) *AptListDefault {
	if code <= 0 {
		code = 500
	}

	return &AptListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the apt list default response
func (o *AptListDefault) WithStatusCode(code int) *AptListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the apt list default response
func (o *AptListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the apt list default response
func (o *AptListDefault) WithPayload(payload AptListDefaultBody) *AptListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the apt list default response
func (o *AptListDefault) SetPayload(payload AptListDefaultBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AptListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
